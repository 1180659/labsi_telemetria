
Receiver.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000018  00800100  00000a9c  00000b30  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000a9c  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000021  00800118  00800118  00000b48  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00000b48  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000ba4  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000088  00000000  00000000  00000be4  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000e49  00000000  00000000  00000c6c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000081e  00000000  00000000  00001ab5  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000082c  00000000  00000000  000022d3  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000150  00000000  00000000  00002b00  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000004eb  00000000  00000000  00002c50  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000007c6  00000000  00000000  0000313b  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000090  00000000  00000000  00003901  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 3b 00 	jmp	0x76	; 0x76 <__ctors_end>
   4:	0c 94 58 00 	jmp	0xb0	; 0xb0 <__bad_interrupt>
   8:	0c 94 58 00 	jmp	0xb0	; 0xb0 <__bad_interrupt>
   c:	0c 94 58 00 	jmp	0xb0	; 0xb0 <__bad_interrupt>
  10:	0c 94 58 00 	jmp	0xb0	; 0xb0 <__bad_interrupt>
  14:	0c 94 58 00 	jmp	0xb0	; 0xb0 <__bad_interrupt>
  18:	0c 94 58 00 	jmp	0xb0	; 0xb0 <__bad_interrupt>
  1c:	0c 94 58 00 	jmp	0xb0	; 0xb0 <__bad_interrupt>
  20:	0c 94 58 00 	jmp	0xb0	; 0xb0 <__bad_interrupt>
  24:	0c 94 58 00 	jmp	0xb0	; 0xb0 <__bad_interrupt>
  28:	0c 94 58 00 	jmp	0xb0	; 0xb0 <__bad_interrupt>
  2c:	0c 94 58 00 	jmp	0xb0	; 0xb0 <__bad_interrupt>
  30:	0c 94 58 00 	jmp	0xb0	; 0xb0 <__bad_interrupt>
  34:	0c 94 58 00 	jmp	0xb0	; 0xb0 <__bad_interrupt>
  38:	0c 94 2b 02 	jmp	0x456	; 0x456 <__vector_14>
  3c:	0c 94 58 00 	jmp	0xb0	; 0xb0 <__bad_interrupt>
  40:	0c 94 58 00 	jmp	0xb0	; 0xb0 <__bad_interrupt>
  44:	0c 94 58 00 	jmp	0xb0	; 0xb0 <__bad_interrupt>
  48:	0c 94 58 00 	jmp	0xb0	; 0xb0 <__bad_interrupt>
  4c:	0c 94 58 00 	jmp	0xb0	; 0xb0 <__bad_interrupt>
  50:	0c 94 58 00 	jmp	0xb0	; 0xb0 <__bad_interrupt>
  54:	0c 94 58 00 	jmp	0xb0	; 0xb0 <__bad_interrupt>
  58:	0c 94 58 00 	jmp	0xb0	; 0xb0 <__bad_interrupt>
  5c:	0c 94 58 00 	jmp	0xb0	; 0xb0 <__bad_interrupt>
  60:	0c 94 58 00 	jmp	0xb0	; 0xb0 <__bad_interrupt>
  64:	0c 94 58 00 	jmp	0xb0	; 0xb0 <__bad_interrupt>
  68:	9f 01       	movw	r18, r30
  6a:	a9 01       	movw	r20, r18
  6c:	b3 01       	movw	r22, r6
  6e:	bd 01       	movw	r22, r26
  70:	c8 01       	movw	r24, r16
  72:	d3 01       	movw	r26, r6
  74:	de 01       	movw	r26, r28

00000076 <__ctors_end>:
  76:	11 24       	eor	r1, r1
  78:	1f be       	out	0x3f, r1	; 63
  7a:	cf ef       	ldi	r28, 0xFF	; 255
  7c:	d8 e0       	ldi	r29, 0x08	; 8
  7e:	de bf       	out	0x3e, r29	; 62
  80:	cd bf       	out	0x3d, r28	; 61

00000082 <__do_copy_data>:
  82:	11 e0       	ldi	r17, 0x01	; 1
  84:	a0 e0       	ldi	r26, 0x00	; 0
  86:	b1 e0       	ldi	r27, 0x01	; 1
  88:	ec e9       	ldi	r30, 0x9C	; 156
  8a:	fa e0       	ldi	r31, 0x0A	; 10
  8c:	02 c0       	rjmp	.+4      	; 0x92 <__do_copy_data+0x10>
  8e:	05 90       	lpm	r0, Z+
  90:	0d 92       	st	X+, r0
  92:	a8 31       	cpi	r26, 0x18	; 24
  94:	b1 07       	cpc	r27, r17
  96:	d9 f7       	brne	.-10     	; 0x8e <__do_copy_data+0xc>

00000098 <__do_clear_bss>:
  98:	21 e0       	ldi	r18, 0x01	; 1
  9a:	a8 e1       	ldi	r26, 0x18	; 24
  9c:	b1 e0       	ldi	r27, 0x01	; 1
  9e:	01 c0       	rjmp	.+2      	; 0xa2 <.do_clear_bss_start>

000000a0 <.do_clear_bss_loop>:
  a0:	1d 92       	st	X+, r1

000000a2 <.do_clear_bss_start>:
  a2:	a9 33       	cpi	r26, 0x39	; 57
  a4:	b2 07       	cpc	r27, r18
  a6:	e1 f7       	brne	.-8      	; 0xa0 <.do_clear_bss_loop>
  a8:	0e 94 49 01 	call	0x292	; 0x292 <main>
  ac:	0c 94 4c 05 	jmp	0xa98	; 0xa98 <_exit>

000000b0 <__bad_interrupt>:
  b0:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000b4 <config_portas_atmega>:
uint8_t spi_read(uint8_t junkdata)
{
	SPDR = junkdata; // Write data to SPI data register 
	while(!(SPSR & (1<<SPIF)));		// Wait till transmission complete 
	return(SPDR);
}
  b4:	14 b8       	out	0x04, r1	; 4
  b6:	84 b1       	in	r24, 0x04	; 4
  b8:	8f 62       	ori	r24, 0x2F	; 47
  ba:	84 b9       	out	0x04, r24	; 4
  bc:	24 98       	cbi	0x04, 4	; 4
  be:	15 b8       	out	0x05, r1	; 5
  c0:	2a 9a       	sbi	0x05, 2	; 5
  c2:	29 98       	cbi	0x05, 1	; 5
  c4:	87 b1       	in	r24, 0x07	; 7
  c6:	80 63       	ori	r24, 0x30	; 48
  c8:	87 b9       	out	0x07, r24	; 7
  ca:	53 98       	cbi	0x0a, 3	; 10
  cc:	44 98       	cbi	0x08, 4	; 8
  ce:	14 bc       	out	0x24, r1	; 36
  d0:	84 b5       	in	r24, 0x24	; 36
  d2:	82 60       	ori	r24, 0x02	; 2
  d4:	84 bd       	out	0x24, r24	; 36
  d6:	ee e6       	ldi	r30, 0x6E	; 110
  d8:	f0 e0       	ldi	r31, 0x00	; 0
  da:	80 81       	ld	r24, Z
  dc:	82 60       	ori	r24, 0x02	; 2
  de:	80 83       	st	Z, r24
  e0:	85 b5       	in	r24, 0x25	; 37
  e2:	83 60       	ori	r24, 0x03	; 3
  e4:	85 bd       	out	0x25, r24	; 37
  e6:	88 ec       	ldi	r24, 0xC8	; 200
  e8:	87 bd       	out	0x27, r24	; 39
  ea:	08 95       	ret

000000ec <UART_init>:
  ec:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__DATA_REGION_ORIGIN__+0x64>
  f0:	90 93 c5 00 	sts	0x00C5, r25	; 0x8000c5 <__DATA_REGION_ORIGIN__+0x65>
  f4:	e1 ec       	ldi	r30, 0xC1	; 193
  f6:	f0 e0       	ldi	r31, 0x00	; 0
  f8:	80 81       	ld	r24, Z
  fa:	88 61       	ori	r24, 0x18	; 24
  fc:	80 83       	st	Z, r24
  fe:	8e e0       	ldi	r24, 0x0E	; 14
 100:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__DATA_REGION_ORIGIN__+0x62>
 104:	08 95       	ret

00000106 <UART_writec>:
 106:	e0 ec       	ldi	r30, 0xC0	; 192
 108:	f0 e0       	ldi	r31, 0x00	; 0
 10a:	90 81       	ld	r25, Z
 10c:	95 ff       	sbrs	r25, 5
 10e:	fd cf       	rjmp	.-6      	; 0x10a <UART_writec+0x4>
 110:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__DATA_REGION_ORIGIN__+0x66>
 114:	08 95       	ret

00000116 <UART_writeS>:
 116:	cf 93       	push	r28
 118:	df 93       	push	r29
 11a:	ec 01       	movw	r28, r24
 11c:	88 81       	ld	r24, Y
 11e:	88 23       	and	r24, r24
 120:	31 f0       	breq	.+12     	; 0x12e <UART_writeS+0x18>
 122:	21 96       	adiw	r28, 0x01	; 1
 124:	0e 94 83 00 	call	0x106	; 0x106 <UART_writec>
 128:	89 91       	ld	r24, Y+
 12a:	81 11       	cpse	r24, r1
 12c:	fb cf       	rjmp	.-10     	; 0x124 <UART_writeS+0xe>
 12e:	df 91       	pop	r29
 130:	cf 91       	pop	r28
 132:	08 95       	ret

00000134 <config_spi_atmega>:
 134:	80 ed       	ldi	r24, 0xD0	; 208
 136:	8c bd       	out	0x2c, r24	; 44
 138:	81 e8       	ldi	r24, 0x81	; 129
 13a:	8d bd       	out	0x2d, r24	; 45
 13c:	08 95       	ret

0000013e <spi_read_X_bytes>:

void spi_read_X_bytes()  //tempo estimado de envio de 24us
{
 13e:	e8 e1       	ldi	r30, 0x18	; 24
 140:	f1 e0       	ldi	r31, 0x01	; 1
 142:	27 e3       	ldi	r18, 0x37	; 55
 144:	31 e0       	ldi	r19, 0x01	; 1

	for(int i=0;i<31;i++)
	{
		
		SPDR = 0xAA;
 146:	9a ea       	ldi	r25, 0xAA	; 170
 148:	9e bd       	out	0x2e, r25	; 46
		while(!(SPSR & (1<<SPIF)));		// Wait till transmission complete
 14a:	0d b4       	in	r0, 0x2d	; 45
 14c:	07 fe       	sbrs	r0, 7
 14e:	fd cf       	rjmp	.-6      	; 0x14a <spi_read_X_bytes+0xc>
		buffer[i] = SPDR;															
 150:	8e b5       	in	r24, 0x2e	; 46
 152:	81 93       	st	Z+, r24
}

void spi_read_X_bytes()  //tempo estimado de envio de 24us
{

	for(int i=0;i<31;i++)
 154:	e2 17       	cp	r30, r18
 156:	f3 07       	cpc	r31, r19
 158:	b9 f7       	brne	.-18     	; 0x148 <spi_read_X_bytes+0xa>
		SPDR = 0xAA;
		while(!(SPSR & (1<<SPIF)));		// Wait till transmission complete
		buffer[i] = SPDR;															
	}
	
}
 15a:	08 95       	ret

0000015c <spi_write>:

void spi_write(uint8_t data)
{	
	SPDR = data;					/* Write data to SPI data register */ 
 15c:	8e bd       	out	0x2e, r24	; 46
	while(!(SPSR & (1<<SPIF)));		/* Wait till transmission complete */	
 15e:	0d b4       	in	r0, 0x2d	; 45
 160:	07 fe       	sbrs	r0, 7
 162:	fd cf       	rjmp	.-6      	; 0x15e <spi_write+0x2>
}
 164:	08 95       	ret

00000166 <configuracao_do_nrf24L01_RX>:

/******* NRF FUNCTIONS *****/
void configuracao_do_nrf24L01_RX()
{
	
	PORTB &= ~(1<<CE);
 166:	29 98       	cbi	0x05, 1	; 5
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 168:	8f e2       	ldi	r24, 0x2F	; 47
 16a:	95 e7       	ldi	r25, 0x75	; 117
 16c:	01 97       	sbiw	r24, 0x01	; 1
 16e:	f1 f7       	brne	.-4      	; 0x16c <configuracao_do_nrf24L01_RX+0x6>
 170:	00 c0       	rjmp	.+0      	; 0x172 <configuracao_do_nrf24L01_RX+0xc>
 172:	00 00       	nop
	
	_delay_ms(12); // tempo de espera após alimentação do modulo
		
	PORTB &= ~(1<<SS_NRF); //SETUP_AW
 174:	2a 98       	cbi	0x05, 2	; 5
	spi_write(SETUP_AW);
 176:	83 e2       	ldi	r24, 0x23	; 35
 178:	0e 94 ae 00 	call	0x15c	; 0x15c <spi_write>
	spi_write(0b00000001); //3 bytes para RX e TX address (o minimo)
 17c:	81 e0       	ldi	r24, 0x01	; 1
 17e:	0e 94 ae 00 	call	0x15c	; 0x15c <spi_write>
	PORTB |= (1<<SS_NRF);
 182:	2a 9a       	sbi	0x05, 2	; 5
	
	
	PORTB &= ~(1<<SS_NRF); //RX_ADDR_P0 address de 3 bytes
 184:	2a 98       	cbi	0x05, 2	; 5
	spi_write(RX_ADDR_P0);
 186:	8a e2       	ldi	r24, 0x2A	; 42
 188:	0e 94 ae 00 	call	0x15c	; 0x15c <spi_write>
	spi_write(END_RX_Byte2);
 18c:	89 e6       	ldi	r24, 0x69	; 105
 18e:	0e 94 ae 00 	call	0x15c	; 0x15c <spi_write>
	spi_write(END_RX_Byte1);
 192:	8d ee       	ldi	r24, 0xED	; 237
 194:	0e 94 ae 00 	call	0x15c	; 0x15c <spi_write>
	spi_write(END_RX_Byte0);
 198:	85 e7       	ldi	r24, 0x75	; 117
 19a:	0e 94 ae 00 	call	0x15c	; 0x15c <spi_write>
	PORTB |= (1<<SS_NRF);
 19e:	2a 9a       	sbi	0x05, 2	; 5
	

	
	PORTB &= ~(1<<SS_NRF); //EN_AA nao se usa o Enhanced Shockburst
 1a0:	2a 98       	cbi	0x05, 2	; 5
	spi_write(EN_AA);
 1a2:	81 e2       	ldi	r24, 0x21	; 33
 1a4:	0e 94 ae 00 	call	0x15c	; 0x15c <spi_write>
	spi_write(0); //nao usa auto acknowledgement 
 1a8:	80 e0       	ldi	r24, 0x00	; 0
 1aa:	0e 94 ae 00 	call	0x15c	; 0x15c <spi_write>
	PORTB |= (1<<SS_NRF);
 1ae:	2a 9a       	sbi	0x05, 2	; 5
	

	PORTB &= ~(1<<SS_NRF); //EN_RXADDR
 1b0:	2a 98       	cbi	0x05, 2	; 5
	spi_write(EN_RXADDR);
 1b2:	82 e2       	ldi	r24, 0x22	; 34
 1b4:	0e 94 ae 00 	call	0x15c	; 0x15c <spi_write>
	spi_write(0b00000001); //enable data pipe 0
 1b8:	81 e0       	ldi	r24, 0x01	; 1
 1ba:	0e 94 ae 00 	call	0x15c	; 0x15c <spi_write>
	PORTB |= (1<<SS_NRF);
 1be:	2a 9a       	sbi	0x05, 2	; 5


	PORTB &= ~(1<<SS_NRF); //SETUP_RETR 
 1c0:	2a 98       	cbi	0x05, 2	; 5
	spi_write(SETUP_RETR);
 1c2:	84 e2       	ldi	r24, 0x24	; 36
 1c4:	0e 94 ae 00 	call	0x15c	; 0x15c <spi_write>
	spi_write(0); //Re-Transmit disabled
 1c8:	80 e0       	ldi	r24, 0x00	; 0
 1ca:	0e 94 ae 00 	call	0x15c	; 0x15c <spi_write>
	PORTB |= (1<<SS_NRF);
 1ce:	2a 9a       	sbi	0x05, 2	; 5
	

	PORTB &= ~(1<<SS_NRF); //RF_CH
 1d0:	2a 98       	cbi	0x05, 2	; 5
	spi_write(RF_CH);
 1d2:	85 e2       	ldi	r24, 0x25	; 37
 1d4:	0e 94 ae 00 	call	0x15c	; 0x15c <spi_write>
	spi_write(0); //frequencia do canal fica a 2.4GHz
 1d8:	80 e0       	ldi	r24, 0x00	; 0
 1da:	0e 94 ae 00 	call	0x15c	; 0x15c <spi_write>
	PORTB |= (1<<SS_NRF);
 1de:	2a 9a       	sbi	0x05, 2	; 5
	

	PORTB &= ~(1<<SS_NRF); //RF_SETUP
 1e0:	2a 98       	cbi	0x05, 2	; 5
	spi_write(RF_SETUP);
 1e2:	86 e2       	ldi	r24, 0x26	; 38
 1e4:	0e 94 ae 00 	call	0x15c	; 0x15c <spi_write>
	spi_write(0b00000110); //air data rate = 1Mbps, output power in TX mode = 0dBm, setup LNA gain disabled
 1e8:	86 e0       	ldi	r24, 0x06	; 6
 1ea:	0e 94 ae 00 	call	0x15c	; 0x15c <spi_write>
	PORTB |= (1<<SS_NRF);
 1ee:	2a 9a       	sbi	0x05, 2	; 5
	

	PORTB &= ~(1<<SS_NRF); //STATUS dar reset/limpar
 1f0:	2a 98       	cbi	0x05, 2	; 5
	spi_write(STATUS);
 1f2:	87 e2       	ldi	r24, 0x27	; 39
 1f4:	0e 94 ae 00 	call	0x15c	; 0x15c <spi_write>
	spi_write(0b01000000); //clear bit do RX FIFO
 1f8:	80 e4       	ldi	r24, 0x40	; 64
 1fa:	0e 94 ae 00 	call	0x15c	; 0x15c <spi_write>
	PORTB |= (1<<SS_NRF);
 1fe:	2a 9a       	sbi	0x05, 2	; 5
	

	PORTB &= ~(1<<SS_NRF); //RX_PW_P0
 200:	2a 98       	cbi	0x05, 2	; 5
	spi_write(RX_PW_P0);
 202:	81 e3       	ldi	r24, 0x31	; 49
 204:	0e 94 ae 00 	call	0x15c	; 0x15c <spi_write>
	spi_write(0b00011111); //31 bytes no RX payload do pipe 0
 208:	8f e1       	ldi	r24, 0x1F	; 31
 20a:	0e 94 ae 00 	call	0x15c	; 0x15c <spi_write>
	PORTB |= (1<<SS_NRF);
 20e:	2a 9a       	sbi	0x05, 2	; 5
	
	
	PORTB &= ~(1<<SS_NRF);
 210:	2a 98       	cbi	0x05, 2	; 5
	spi_write(FLUSH_RX); //FLUSH_RX
 212:	82 ee       	ldi	r24, 0xE2	; 226
 214:	0e 94 ae 00 	call	0x15c	; 0x15c <spi_write>
	PORTB |= (1<<SS_NRF);
 218:	2a 9a       	sbi	0x05, 2	; 5
	
	
	PORTB &= ~(1<<SS_NRF);
 21a:	2a 98       	cbi	0x05, 2	; 5
	spi_write(FLUSH_TX); //FLUSH_TX
 21c:	81 ee       	ldi	r24, 0xE1	; 225
 21e:	0e 94 ae 00 	call	0x15c	; 0x15c <spi_write>
	PORTB |= (1<<SS_NRF);
 222:	2a 9a       	sbi	0x05, 2	; 5
	
	
	PORTB &= ~(1<<SS_NRF); //CONFIG
 224:	2a 98       	cbi	0x05, 2	; 5
	spi_write(CONFIGnrf);
 226:	80 e2       	ldi	r24, 0x20	; 32
 228:	0e 94 ae 00 	call	0x15c	; 0x15c <spi_write>
	spi_write(0b00110011); //CRC (des)ligado, Power UP, IRQ -> RX_DS, PRIM_RX = 1
 22c:	83 e3       	ldi	r24, 0x33	; 51
 22e:	0e 94 ae 00 	call	0x15c	; 0x15c <spi_write>
	PORTB |= (1<<SS_NRF);
 232:	2a 9a       	sbi	0x05, 2	; 5
 234:	87 e8       	ldi	r24, 0x87	; 135
 236:	93 e1       	ldi	r25, 0x13	; 19
 238:	01 97       	sbiw	r24, 0x01	; 1
 23a:	f1 f7       	brne	.-4      	; 0x238 <configuracao_do_nrf24L01_RX+0xd2>
 23c:	00 c0       	rjmp	.+0      	; 0x23e <configuracao_do_nrf24L01_RX+0xd8>
 23e:	00 00       	nop
 240:	08 95       	ret

00000242 <recebe_sample>:


void recebe_sample()
{
	
		PORTB |= (1<<CE);
 242:	29 9a       	sbi	0x05, 1	; 5
					
					while( (PIND & (1<<IRQ)) )
 244:	4b 9b       	sbis	0x09, 3	; 9
 246:	08 c0       	rjmp	.+16     	; 0x258 <recebe_sample+0x16>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 248:	8a e1       	ldi	r24, 0x1A	; 26
 24a:	8a 95       	dec	r24
 24c:	f1 f7       	brne	.-4      	; 0x24a <recebe_sample+0x8>
 24e:	00 c0       	rjmp	.+0      	; 0x250 <recebe_sample+0xe>
					{
						_delay_us(8);
						PORTC &= ~(1<<LEDstatus);
 250:	45 98       	cbi	0x08, 5	; 8
						PORTC |= (1<<LEDerror);
 252:	44 9a       	sbi	0x08, 4	; 8
void recebe_sample()
{
	
		PORTB |= (1<<CE);
					
					while( (PIND & (1<<IRQ)) )
 254:	4b 99       	sbic	0x09, 3	; 9
 256:	f8 cf       	rjmp	.-16     	; 0x248 <recebe_sample+0x6>
						_delay_us(8);
						PORTC &= ~(1<<LEDstatus);
						PORTC |= (1<<LEDerror);
					}
					
					if ( !(PIND & (1<<IRQ)) )
 258:	4b 99       	sbic	0x09, 3	; 9
 25a:	19 c0       	rjmp	.+50     	; 0x28e <recebe_sample+0x4c>
					{
						
						PORTC |= (1<<LEDstatus); // ligar o LEDteste1
 25c:	45 9a       	sbi	0x08, 5	; 8
						PORTC &= ~(1<<LEDerror);
 25e:	44 98       	cbi	0x08, 4	; 8
								
									
						PORTB &= ~(1<<CE);//desligar modo RX para ler o RX_FIFO	
 260:	29 98       	cbi	0x05, 1	; 5
						
												
						PORTB &= ~(1<<SS_NRF);
 262:	2a 98       	cbi	0x05, 2	; 5
						spi_write(R_RX_PAYLOAD); //R_RX_PAYLOAD
 264:	81 e6       	ldi	r24, 0x61	; 97
 266:	0e 94 ae 00 	call	0x15c	; 0x15c <spi_write>
						spi_read_X_bytes();
 26a:	0e 94 9f 00 	call	0x13e	; 0x13e <spi_read_X_bytes>
						PORTB |= (1<<SS_NRF);
 26e:	2a 9a       	sbi	0x05, 2	; 5
						
						
						PORTB |= (1<<CE);
 270:	29 9a       	sbi	0x05, 1	; 5
						
						
						PORTB &= ~(1<<SS_NRF); //STATUS dar reset/limpar
 272:	2a 98       	cbi	0x05, 2	; 5
						spi_write(STATUS);
 274:	87 e2       	ldi	r24, 0x27	; 39
 276:	0e 94 ae 00 	call	0x15c	; 0x15c <spi_write>
						spi_write(0b01000000); //clear bit do RX FIFO
 27a:	80 e4       	ldi	r24, 0x40	; 64
 27c:	0e 94 ae 00 	call	0x15c	; 0x15c <spi_write>
						PORTB |= (1<<SS_NRF);
 280:	2a 9a       	sbi	0x05, 2	; 5
						
						
						PORTB &= ~(1<<SS_NRF);
 282:	2a 98       	cbi	0x05, 2	; 5
						spi_write(FLUSH_RX); //FLUSH_RX
 284:	82 ee       	ldi	r24, 0xE2	; 226
 286:	0e 94 ae 00 	call	0x15c	; 0x15c <spi_write>
						PORTB |= (1<<SS_NRF);
 28a:	2a 9a       	sbi	0x05, 2	; 5
 28c:	08 95       	ret
					}					
					
					else
					{
						
						PORTC &= ~(1<<LEDstatus);
 28e:	45 98       	cbi	0x08, 5	; 8
 290:	08 95       	ret

00000292 <main>:




int main(void)
{
 292:	cf 93       	push	r28
 294:	df 93       	push	r29
 296:	cd b7       	in	r28, 0x3d	; 61
 298:	de b7       	in	r29, 0x3e	; 62
 29a:	c0 5b       	subi	r28, 0xB0	; 176
 29c:	d1 40       	sbci	r29, 0x01	; 1
 29e:	0f b6       	in	r0, 0x3f	; 63
 2a0:	f8 94       	cli
 2a2:	de bf       	out	0x3e, r29	; 62
 2a4:	0f be       	out	0x3f, r0	; 63
 2a6:	cd bf       	out	0x3d, r28	; 61
	
	config_portas_atmega();
 2a8:	0e 94 5a 00 	call	0xb4	; 0xb4 <config_portas_atmega>
	UART_init(64);
 2ac:	80 e4       	ldi	r24, 0x40	; 64
 2ae:	90 e0       	ldi	r25, 0x00	; 0
 2b0:	0e 94 76 00 	call	0xec	; 0xec <UART_init>
	config_spi_atmega();
 2b4:	0e 94 9a 00 	call	0x134	; 0x134 <config_spi_atmega>
	configuracao_do_nrf24L01_RX();
 2b8:	0e 94 b3 00 	call	0x166	; 0x166 <configuracao_do_nrf24L01_RX>
	{
		
		for (i=0; i<8; i++){
			
			recebe_sample();
			id=buffer[30];
 2bc:	0f 2e       	mov	r0, r31
 2be:	f8 e1       	ldi	r31, 0x18	; 24
 2c0:	cf 2e       	mov	r12, r31
 2c2:	f1 e0       	ldi	r31, 0x01	; 1
 2c4:	df 2e       	mov	r13, r31
 2c6:	f0 2d       	mov	r31, r0
 2c8:	06 e3       	ldi	r16, 0x36	; 54
 2ca:	11 e0       	ldi	r17, 0x01	; 1
			
		
		}
		
		char text[218];
		snprintf(text, 218, "%s,%s,%s,%s,%s,%s,%s", ax_text, ay_text, az_text, t_text, gx_text, gy_text, gz_text);
 2cc:	4e 01       	movw	r8, r28
 2ce:	25 eb       	ldi	r18, 0xB5	; 181
 2d0:	82 0e       	add	r8, r18
 2d2:	91 1c       	adc	r9, r1
 2d4:	3e 01       	movw	r6, r28
 2d6:	87 e9       	ldi	r24, 0x97	; 151
 2d8:	68 0e       	add	r6, r24
 2da:	71 1c       	adc	r7, r1
 2dc:	2e 01       	movw	r4, r28
 2de:	99 e7       	ldi	r25, 0x79	; 121
 2e0:	49 0e       	add	r4, r25
 2e2:	51 1c       	adc	r5, r1
 2e4:	1e 01       	movw	r2, r28
 2e6:	ab e5       	ldi	r26, 0x5B	; 91
 2e8:	2a 0e       	add	r2, r26
 2ea:	31 1c       	adc	r3, r1
 2ec:	ce 01       	movw	r24, r28
 2ee:	cd 96       	adiw	r24, 0x3d	; 61
 2f0:	c3 55       	subi	r28, 0x53	; 83
 2f2:	de 4f       	sbci	r29, 0xFE	; 254
 2f4:	99 83       	std	Y+1, r25	; 0x01
 2f6:	88 83       	st	Y, r24
 2f8:	cd 5a       	subi	r28, 0xAD	; 173
 2fa:	d1 40       	sbci	r29, 0x01	; 1
 2fc:	de 01       	movw	r26, r28
 2fe:	5f 96       	adiw	r26, 0x1f	; 31
 300:	c1 55       	subi	r28, 0x51	; 81
 302:	de 4f       	sbci	r29, 0xFE	; 254
 304:	b9 83       	std	Y+1, r27	; 0x01
 306:	a8 83       	st	Y, r26
 308:	cf 5a       	subi	r28, 0xAF	; 175
 30a:	d1 40       	sbci	r29, 0x01	; 1
 30c:	5e 01       	movw	r10, r28
 30e:	b3 ed       	ldi	r27, 0xD3	; 211
 310:	ab 0e       	add	r10, r27
 312:	b1 1c       	adc	r11, r1




int main(void)
{
 314:	68 94       	set
 316:	ee 24       	eor	r14, r14
 318:	e3 f8       	bld	r14, 3
 31a:	f1 2c       	mov	r15, r1
	while (1)
	{
		
		for (i=0; i<8; i++){
			
			recebe_sample();
 31c:	0e 94 21 01 	call	0x242	; 0x242 <recebe_sample>
			id=buffer[30];
			
			switch (id)
 320:	d6 01       	movw	r26, r12
 322:	5e 96       	adiw	r26, 0x1e	; 30
 324:	ec 91       	ld	r30, X
 326:	8e 2f       	mov	r24, r30
 328:	90 e0       	ldi	r25, 0x00	; 0
 32a:	fc 01       	movw	r30, r24
 32c:	31 97       	sbiw	r30, 0x01	; 1
 32e:	e7 30       	cpi	r30, 0x07	; 7
 330:	f1 05       	cpc	r31, r1
 332:	08 f0       	brcs	.+2      	; 0x336 <main+0xa4>
 334:	4d c0       	rjmp	.+154    	; 0x3d0 <main+0x13e>
 336:	ec 5c       	subi	r30, 0xCC	; 204
 338:	ff 4f       	sbci	r31, 0xFF	; 255
 33a:	0c 94 4e 02 	jmp	0x49c	; 0x49c <__tablejump2__>
 33e:	e8 e1       	ldi	r30, 0x18	; 24
 340:	f1 e0       	ldi	r31, 0x01	; 1
 342:	de 01       	movw	r26, r28
 344:	11 96       	adiw	r26, 0x01	; 1
			{
				case 1:
				
				for(j=0; j<30 ;j++){
					
					ax_text[j]=buffer[j];
 346:	81 91       	ld	r24, Z+
 348:	8d 93       	st	X+, r24
			
			switch (id)
			{
				case 1:
				
				for(j=0; j<30 ;j++){
 34a:	0e 17       	cp	r16, r30
 34c:	1f 07       	cpc	r17, r31
 34e:	d9 f7       	brne	.-10     	; 0x346 <main+0xb4>
 350:	3f c0       	rjmp	.+126    	; 0x3d0 <main+0x13e>
 352:	e8 e1       	ldi	r30, 0x18	; 24
 354:	f1 e0       	ldi	r31, 0x01	; 1
 356:	de 01       	movw	r26, r28
 358:	5f 96       	adiw	r26, 0x1f	; 31
				
				case 2:
				
				for(j=0; j<30 ;j++){
					
					ay_text[j]=buffer[j];
 35a:	81 91       	ld	r24, Z+
 35c:	8d 93       	st	X+, r24
				}
				break;
				
				case 2:
				
				for(j=0; j<30 ;j++){
 35e:	0e 17       	cp	r16, r30
 360:	1f 07       	cpc	r17, r31
 362:	d9 f7       	brne	.-10     	; 0x35a <main+0xc8>
 364:	35 c0       	rjmp	.+106    	; 0x3d0 <main+0x13e>
 366:	e8 e1       	ldi	r30, 0x18	; 24
 368:	f1 e0       	ldi	r31, 0x01	; 1
 36a:	de 01       	movw	r26, r28
 36c:	dd 96       	adiw	r26, 0x3d	; 61
				
				case 3:
				
				for(j=0; j<30 ;j++){
					
					az_text[j]=buffer[j];
 36e:	81 91       	ld	r24, Z+
 370:	8d 93       	st	X+, r24
				}
				break;
				
				case 3:
				
				for(j=0; j<30 ;j++){
 372:	e0 17       	cp	r30, r16
 374:	f1 07       	cpc	r31, r17
 376:	d9 f7       	brne	.-10     	; 0x36e <main+0xdc>
 378:	2b c0       	rjmp	.+86     	; 0x3d0 <main+0x13e>
 37a:	e8 e1       	ldi	r30, 0x18	; 24
 37c:	f1 e0       	ldi	r31, 0x01	; 1
 37e:	de 01       	movw	r26, r28
 380:	a5 5a       	subi	r26, 0xA5	; 165
 382:	bf 4f       	sbci	r27, 0xFF	; 255
					
				case 4:
				
				for(j=0; j<30 ;j++){
					
					t_text[j]=buffer[j];
 384:	81 91       	ld	r24, Z+
 386:	8d 93       	st	X+, r24
				}
					break;
					
				case 4:
				
				for(j=0; j<30 ;j++){
 388:	0e 17       	cp	r16, r30
 38a:	1f 07       	cpc	r17, r31
 38c:	d9 f7       	brne	.-10     	; 0x384 <main+0xf2>
 38e:	20 c0       	rjmp	.+64     	; 0x3d0 <main+0x13e>
 390:	e8 e1       	ldi	r30, 0x18	; 24
 392:	f1 e0       	ldi	r31, 0x01	; 1
 394:	de 01       	movw	r26, r28
 396:	a7 58       	subi	r26, 0x87	; 135
 398:	bf 4f       	sbci	r27, 0xFF	; 255
					
				case 5:
				
				for(j=0; j<30 ;j++){
					
					gx_text[j]=buffer[j];
 39a:	81 91       	ld	r24, Z+
 39c:	8d 93       	st	X+, r24
				}
					break;
					
				case 5:
				
				for(j=0; j<30 ;j++){
 39e:	e0 17       	cp	r30, r16
 3a0:	f1 07       	cpc	r31, r17
 3a2:	d9 f7       	brne	.-10     	; 0x39a <main+0x108>
 3a4:	15 c0       	rjmp	.+42     	; 0x3d0 <main+0x13e>
 3a6:	e8 e1       	ldi	r30, 0x18	; 24
 3a8:	f1 e0       	ldi	r31, 0x01	; 1
 3aa:	de 01       	movw	r26, r28
 3ac:	a9 56       	subi	r26, 0x69	; 105
 3ae:	bf 4f       	sbci	r27, 0xFF	; 255
					
				case 6:
				
				for(j=0; j<30 ;j++){
					
					gy_text[j]=buffer[j];
 3b0:	81 91       	ld	r24, Z+
 3b2:	8d 93       	st	X+, r24
				}
					break;
					
				case 6:
				
				for(j=0; j<30 ;j++){
 3b4:	e0 17       	cp	r30, r16
 3b6:	f1 07       	cpc	r31, r17
 3b8:	d9 f7       	brne	.-10     	; 0x3b0 <main+0x11e>
 3ba:	0a c0       	rjmp	.+20     	; 0x3d0 <main+0x13e>
 3bc:	e8 e1       	ldi	r30, 0x18	; 24
 3be:	f1 e0       	ldi	r31, 0x01	; 1
 3c0:	de 01       	movw	r26, r28
 3c2:	ab 54       	subi	r26, 0x4B	; 75
 3c4:	bf 4f       	sbci	r27, 0xFF	; 255
					
				case 7:
				
				for(j=0; j<30 ;j++){
					
					gz_text[j]=buffer[j];
 3c6:	81 91       	ld	r24, Z+
 3c8:	8d 93       	st	X+, r24
				}
					break;
					
				case 7:
				
				for(j=0; j<30 ;j++){
 3ca:	e0 17       	cp	r30, r16
 3cc:	f1 07       	cpc	r31, r17
 3ce:	d9 f7       	brne	.-10     	; 0x3c6 <main+0x134>
 3d0:	b1 e0       	ldi	r27, 0x01	; 1
 3d2:	eb 1a       	sub	r14, r27
 3d4:	f1 08       	sbc	r15, r1
	int i,j,id;
	
	while (1)
	{
		
		for (i=0; i<8; i++){
 3d6:	09 f0       	breq	.+2      	; 0x3da <main+0x148>
 3d8:	a1 cf       	rjmp	.-190    	; 0x31c <main+0x8a>
			
		
		}
		
		char text[218];
		snprintf(text, 218, "%s,%s,%s,%s,%s,%s,%s", ax_text, ay_text, az_text, t_text, gx_text, gy_text, gz_text);
 3da:	9f 92       	push	r9
 3dc:	8f 92       	push	r8
 3de:	7f 92       	push	r7
 3e0:	6f 92       	push	r6
 3e2:	5f 92       	push	r5
 3e4:	4f 92       	push	r4
 3e6:	3f 92       	push	r3
 3e8:	2f 92       	push	r2
 3ea:	c2 55       	subi	r28, 0x52	; 82
 3ec:	de 4f       	sbci	r29, 0xFE	; 254
 3ee:	28 81       	ld	r18, Y
 3f0:	ce 5a       	subi	r28, 0xAE	; 174
 3f2:	d1 40       	sbci	r29, 0x01	; 1
 3f4:	2f 93       	push	r18
 3f6:	c3 55       	subi	r28, 0x53	; 83
 3f8:	de 4f       	sbci	r29, 0xFE	; 254
 3fa:	88 81       	ld	r24, Y
 3fc:	cd 5a       	subi	r28, 0xAD	; 173
 3fe:	d1 40       	sbci	r29, 0x01	; 1
 400:	8f 93       	push	r24
 402:	c0 55       	subi	r28, 0x50	; 80
 404:	de 4f       	sbci	r29, 0xFE	; 254
 406:	98 81       	ld	r25, Y
 408:	c0 5b       	subi	r28, 0xB0	; 176
 40a:	d1 40       	sbci	r29, 0x01	; 1
 40c:	9f 93       	push	r25
 40e:	c1 55       	subi	r28, 0x51	; 81
 410:	de 4f       	sbci	r29, 0xFE	; 254
 412:	a8 81       	ld	r26, Y
 414:	cf 5a       	subi	r28, 0xAF	; 175
 416:	d1 40       	sbci	r29, 0x01	; 1
 418:	af 93       	push	r26
 41a:	81 e0       	ldi	r24, 0x01	; 1
 41c:	90 e0       	ldi	r25, 0x00	; 0
 41e:	8c 0f       	add	r24, r28
 420:	9d 1f       	adc	r25, r29
 422:	9f 93       	push	r25
 424:	8f 93       	push	r24
 426:	a0 e0       	ldi	r26, 0x00	; 0
 428:	b1 e0       	ldi	r27, 0x01	; 1
 42a:	bf 93       	push	r27
 42c:	af 93       	push	r26
 42e:	1f 92       	push	r1
 430:	8a ed       	ldi	r24, 0xDA	; 218
 432:	8f 93       	push	r24
 434:	bf 92       	push	r11
 436:	af 92       	push	r10
 438:	0e 94 54 02 	call	0x4a8	; 0x4a8 <snprintf>
		UART_writeS(text);
 43c:	c5 01       	movw	r24, r10
 43e:	0e 94 8b 00 	call	0x116	; 0x116 <UART_writeS>
		UART_writeS("\n\r");
 442:	85 e1       	ldi	r24, 0x15	; 21
 444:	91 e0       	ldi	r25, 0x01	; 1
 446:	0e 94 8b 00 	call	0x116	; 0x116 <UART_writeS>
			
	}
 44a:	0f b6       	in	r0, 0x3f	; 63
 44c:	f8 94       	cli
 44e:	de bf       	out	0x3e, r29	; 62
 450:	0f be       	out	0x3f, r0	; 63
 452:	cd bf       	out	0x3d, r28	; 61
 454:	5f cf       	rjmp	.-322    	; 0x314 <main+0x82>

00000456 <__vector_14>:
	return 0;
}


ISR(TIMER0_COMPA_vect)
{
 456:	1f 92       	push	r1
 458:	0f 92       	push	r0
 45a:	0f b6       	in	r0, 0x3f	; 63
 45c:	0f 92       	push	r0
 45e:	11 24       	eor	r1, r1
 460:	8f 93       	push	r24
 462:	9f 93       	push	r25
	if (count == 25)
 464:	80 91 37 01 	lds	r24, 0x0137	; 0x800137 <count>
 468:	90 91 38 01 	lds	r25, 0x0138	; 0x800138 <count+0x1>
 46c:	89 31       	cpi	r24, 0x19	; 25
 46e:	91 05       	cpc	r25, r1
 470:	49 f4       	brne	.+18     	; 0x484 <__vector_14+0x2e>
	{
		PORTB ^= (1<<LEDblink);
 472:	95 b1       	in	r25, 0x05	; 5
 474:	81 e0       	ldi	r24, 0x01	; 1
 476:	89 27       	eor	r24, r25
 478:	85 b9       	out	0x05, r24	; 5
		count=0;
 47a:	10 92 38 01 	sts	0x0138, r1	; 0x800138 <count+0x1>
 47e:	10 92 37 01 	sts	0x0137, r1	; 0x800137 <count>
 482:	05 c0       	rjmp	.+10     	; 0x48e <__vector_14+0x38>
	}
	else
	count++;
 484:	01 96       	adiw	r24, 0x01	; 1
 486:	90 93 38 01 	sts	0x0138, r25	; 0x800138 <count+0x1>
 48a:	80 93 37 01 	sts	0x0137, r24	; 0x800137 <count>
	
 48e:	9f 91       	pop	r25
 490:	8f 91       	pop	r24
 492:	0f 90       	pop	r0
 494:	0f be       	out	0x3f, r0	; 63
 496:	0f 90       	pop	r0
 498:	1f 90       	pop	r1
 49a:	18 95       	reti

0000049c <__tablejump2__>:
 49c:	ee 0f       	add	r30, r30
 49e:	ff 1f       	adc	r31, r31
 4a0:	05 90       	lpm	r0, Z+
 4a2:	f4 91       	lpm	r31, Z
 4a4:	e0 2d       	mov	r30, r0
 4a6:	09 94       	ijmp

000004a8 <snprintf>:
 4a8:	ae e0       	ldi	r26, 0x0E	; 14
 4aa:	b0 e0       	ldi	r27, 0x00	; 0
 4ac:	ea e5       	ldi	r30, 0x5A	; 90
 4ae:	f2 e0       	ldi	r31, 0x02	; 2
 4b0:	0c 94 23 05 	jmp	0xa46	; 0xa46 <__prologue_saves__+0x1c>
 4b4:	0d 89       	ldd	r16, Y+21	; 0x15
 4b6:	1e 89       	ldd	r17, Y+22	; 0x16
 4b8:	8f 89       	ldd	r24, Y+23	; 0x17
 4ba:	98 8d       	ldd	r25, Y+24	; 0x18
 4bc:	26 e0       	ldi	r18, 0x06	; 6
 4be:	2c 83       	std	Y+4, r18	; 0x04
 4c0:	1a 83       	std	Y+2, r17	; 0x02
 4c2:	09 83       	std	Y+1, r16	; 0x01
 4c4:	97 ff       	sbrs	r25, 7
 4c6:	02 c0       	rjmp	.+4      	; 0x4cc <snprintf+0x24>
 4c8:	80 e0       	ldi	r24, 0x00	; 0
 4ca:	90 e8       	ldi	r25, 0x80	; 128
 4cc:	01 97       	sbiw	r24, 0x01	; 1
 4ce:	9e 83       	std	Y+6, r25	; 0x06
 4d0:	8d 83       	std	Y+5, r24	; 0x05
 4d2:	ae 01       	movw	r20, r28
 4d4:	45 5e       	subi	r20, 0xE5	; 229
 4d6:	5f 4f       	sbci	r21, 0xFF	; 255
 4d8:	69 8d       	ldd	r22, Y+25	; 0x19
 4da:	7a 8d       	ldd	r23, Y+26	; 0x1a
 4dc:	ce 01       	movw	r24, r28
 4de:	01 96       	adiw	r24, 0x01	; 1
 4e0:	0e 94 84 02 	call	0x508	; 0x508 <vfprintf>
 4e4:	4d 81       	ldd	r20, Y+5	; 0x05
 4e6:	5e 81       	ldd	r21, Y+6	; 0x06
 4e8:	57 fd       	sbrc	r21, 7
 4ea:	0a c0       	rjmp	.+20     	; 0x500 <snprintf+0x58>
 4ec:	2f 81       	ldd	r18, Y+7	; 0x07
 4ee:	38 85       	ldd	r19, Y+8	; 0x08
 4f0:	42 17       	cp	r20, r18
 4f2:	53 07       	cpc	r21, r19
 4f4:	0c f4       	brge	.+2      	; 0x4f8 <snprintf+0x50>
 4f6:	9a 01       	movw	r18, r20
 4f8:	f8 01       	movw	r30, r16
 4fa:	e2 0f       	add	r30, r18
 4fc:	f3 1f       	adc	r31, r19
 4fe:	10 82       	st	Z, r1
 500:	2e 96       	adiw	r28, 0x0e	; 14
 502:	e4 e0       	ldi	r30, 0x04	; 4
 504:	0c 94 3f 05 	jmp	0xa7e	; 0xa7e <__epilogue_restores__+0x1c>

00000508 <vfprintf>:
 508:	ab e0       	ldi	r26, 0x0B	; 11
 50a:	b0 e0       	ldi	r27, 0x00	; 0
 50c:	ea e8       	ldi	r30, 0x8A	; 138
 50e:	f2 e0       	ldi	r31, 0x02	; 2
 510:	0c 94 15 05 	jmp	0xa2a	; 0xa2a <__prologue_saves__>
 514:	6c 01       	movw	r12, r24
 516:	7b 01       	movw	r14, r22
 518:	8a 01       	movw	r16, r20
 51a:	fc 01       	movw	r30, r24
 51c:	17 82       	std	Z+7, r1	; 0x07
 51e:	16 82       	std	Z+6, r1	; 0x06
 520:	83 81       	ldd	r24, Z+3	; 0x03
 522:	81 ff       	sbrs	r24, 1
 524:	cc c1       	rjmp	.+920    	; 0x8be <vfprintf+0x3b6>
 526:	ce 01       	movw	r24, r28
 528:	01 96       	adiw	r24, 0x01	; 1
 52a:	3c 01       	movw	r6, r24
 52c:	f6 01       	movw	r30, r12
 52e:	93 81       	ldd	r25, Z+3	; 0x03
 530:	f7 01       	movw	r30, r14
 532:	93 fd       	sbrc	r25, 3
 534:	85 91       	lpm	r24, Z+
 536:	93 ff       	sbrs	r25, 3
 538:	81 91       	ld	r24, Z+
 53a:	7f 01       	movw	r14, r30
 53c:	88 23       	and	r24, r24
 53e:	09 f4       	brne	.+2      	; 0x542 <vfprintf+0x3a>
 540:	ba c1       	rjmp	.+884    	; 0x8b6 <vfprintf+0x3ae>
 542:	85 32       	cpi	r24, 0x25	; 37
 544:	39 f4       	brne	.+14     	; 0x554 <vfprintf+0x4c>
 546:	93 fd       	sbrc	r25, 3
 548:	85 91       	lpm	r24, Z+
 54a:	93 ff       	sbrs	r25, 3
 54c:	81 91       	ld	r24, Z+
 54e:	7f 01       	movw	r14, r30
 550:	85 32       	cpi	r24, 0x25	; 37
 552:	29 f4       	brne	.+10     	; 0x55e <vfprintf+0x56>
 554:	b6 01       	movw	r22, r12
 556:	90 e0       	ldi	r25, 0x00	; 0
 558:	0e 94 7b 04 	call	0x8f6	; 0x8f6 <fputc>
 55c:	e7 cf       	rjmp	.-50     	; 0x52c <vfprintf+0x24>
 55e:	91 2c       	mov	r9, r1
 560:	21 2c       	mov	r2, r1
 562:	31 2c       	mov	r3, r1
 564:	ff e1       	ldi	r31, 0x1F	; 31
 566:	f3 15       	cp	r31, r3
 568:	d8 f0       	brcs	.+54     	; 0x5a0 <vfprintf+0x98>
 56a:	8b 32       	cpi	r24, 0x2B	; 43
 56c:	79 f0       	breq	.+30     	; 0x58c <vfprintf+0x84>
 56e:	38 f4       	brcc	.+14     	; 0x57e <vfprintf+0x76>
 570:	80 32       	cpi	r24, 0x20	; 32
 572:	79 f0       	breq	.+30     	; 0x592 <vfprintf+0x8a>
 574:	83 32       	cpi	r24, 0x23	; 35
 576:	a1 f4       	brne	.+40     	; 0x5a0 <vfprintf+0x98>
 578:	23 2d       	mov	r18, r3
 57a:	20 61       	ori	r18, 0x10	; 16
 57c:	1d c0       	rjmp	.+58     	; 0x5b8 <vfprintf+0xb0>
 57e:	8d 32       	cpi	r24, 0x2D	; 45
 580:	61 f0       	breq	.+24     	; 0x59a <vfprintf+0x92>
 582:	80 33       	cpi	r24, 0x30	; 48
 584:	69 f4       	brne	.+26     	; 0x5a0 <vfprintf+0x98>
 586:	23 2d       	mov	r18, r3
 588:	21 60       	ori	r18, 0x01	; 1
 58a:	16 c0       	rjmp	.+44     	; 0x5b8 <vfprintf+0xb0>
 58c:	83 2d       	mov	r24, r3
 58e:	82 60       	ori	r24, 0x02	; 2
 590:	38 2e       	mov	r3, r24
 592:	e3 2d       	mov	r30, r3
 594:	e4 60       	ori	r30, 0x04	; 4
 596:	3e 2e       	mov	r3, r30
 598:	2a c0       	rjmp	.+84     	; 0x5ee <vfprintf+0xe6>
 59a:	f3 2d       	mov	r31, r3
 59c:	f8 60       	ori	r31, 0x08	; 8
 59e:	1d c0       	rjmp	.+58     	; 0x5da <vfprintf+0xd2>
 5a0:	37 fc       	sbrc	r3, 7
 5a2:	2d c0       	rjmp	.+90     	; 0x5fe <vfprintf+0xf6>
 5a4:	20 ed       	ldi	r18, 0xD0	; 208
 5a6:	28 0f       	add	r18, r24
 5a8:	2a 30       	cpi	r18, 0x0A	; 10
 5aa:	40 f0       	brcs	.+16     	; 0x5bc <vfprintf+0xb4>
 5ac:	8e 32       	cpi	r24, 0x2E	; 46
 5ae:	b9 f4       	brne	.+46     	; 0x5de <vfprintf+0xd6>
 5b0:	36 fc       	sbrc	r3, 6
 5b2:	81 c1       	rjmp	.+770    	; 0x8b6 <vfprintf+0x3ae>
 5b4:	23 2d       	mov	r18, r3
 5b6:	20 64       	ori	r18, 0x40	; 64
 5b8:	32 2e       	mov	r3, r18
 5ba:	19 c0       	rjmp	.+50     	; 0x5ee <vfprintf+0xe6>
 5bc:	36 fe       	sbrs	r3, 6
 5be:	06 c0       	rjmp	.+12     	; 0x5cc <vfprintf+0xc4>
 5c0:	8a e0       	ldi	r24, 0x0A	; 10
 5c2:	98 9e       	mul	r9, r24
 5c4:	20 0d       	add	r18, r0
 5c6:	11 24       	eor	r1, r1
 5c8:	92 2e       	mov	r9, r18
 5ca:	11 c0       	rjmp	.+34     	; 0x5ee <vfprintf+0xe6>
 5cc:	ea e0       	ldi	r30, 0x0A	; 10
 5ce:	2e 9e       	mul	r2, r30
 5d0:	20 0d       	add	r18, r0
 5d2:	11 24       	eor	r1, r1
 5d4:	22 2e       	mov	r2, r18
 5d6:	f3 2d       	mov	r31, r3
 5d8:	f0 62       	ori	r31, 0x20	; 32
 5da:	3f 2e       	mov	r3, r31
 5dc:	08 c0       	rjmp	.+16     	; 0x5ee <vfprintf+0xe6>
 5de:	8c 36       	cpi	r24, 0x6C	; 108
 5e0:	21 f4       	brne	.+8      	; 0x5ea <vfprintf+0xe2>
 5e2:	83 2d       	mov	r24, r3
 5e4:	80 68       	ori	r24, 0x80	; 128
 5e6:	38 2e       	mov	r3, r24
 5e8:	02 c0       	rjmp	.+4      	; 0x5ee <vfprintf+0xe6>
 5ea:	88 36       	cpi	r24, 0x68	; 104
 5ec:	41 f4       	brne	.+16     	; 0x5fe <vfprintf+0xf6>
 5ee:	f7 01       	movw	r30, r14
 5f0:	93 fd       	sbrc	r25, 3
 5f2:	85 91       	lpm	r24, Z+
 5f4:	93 ff       	sbrs	r25, 3
 5f6:	81 91       	ld	r24, Z+
 5f8:	7f 01       	movw	r14, r30
 5fa:	81 11       	cpse	r24, r1
 5fc:	b3 cf       	rjmp	.-154    	; 0x564 <vfprintf+0x5c>
 5fe:	98 2f       	mov	r25, r24
 600:	9f 7d       	andi	r25, 0xDF	; 223
 602:	95 54       	subi	r25, 0x45	; 69
 604:	93 30       	cpi	r25, 0x03	; 3
 606:	28 f4       	brcc	.+10     	; 0x612 <vfprintf+0x10a>
 608:	0c 5f       	subi	r16, 0xFC	; 252
 60a:	1f 4f       	sbci	r17, 0xFF	; 255
 60c:	9f e3       	ldi	r25, 0x3F	; 63
 60e:	99 83       	std	Y+1, r25	; 0x01
 610:	0d c0       	rjmp	.+26     	; 0x62c <vfprintf+0x124>
 612:	83 36       	cpi	r24, 0x63	; 99
 614:	31 f0       	breq	.+12     	; 0x622 <vfprintf+0x11a>
 616:	83 37       	cpi	r24, 0x73	; 115
 618:	71 f0       	breq	.+28     	; 0x636 <vfprintf+0x12e>
 61a:	83 35       	cpi	r24, 0x53	; 83
 61c:	09 f0       	breq	.+2      	; 0x620 <vfprintf+0x118>
 61e:	59 c0       	rjmp	.+178    	; 0x6d2 <vfprintf+0x1ca>
 620:	21 c0       	rjmp	.+66     	; 0x664 <vfprintf+0x15c>
 622:	f8 01       	movw	r30, r16
 624:	80 81       	ld	r24, Z
 626:	89 83       	std	Y+1, r24	; 0x01
 628:	0e 5f       	subi	r16, 0xFE	; 254
 62a:	1f 4f       	sbci	r17, 0xFF	; 255
 62c:	88 24       	eor	r8, r8
 62e:	83 94       	inc	r8
 630:	91 2c       	mov	r9, r1
 632:	53 01       	movw	r10, r6
 634:	13 c0       	rjmp	.+38     	; 0x65c <vfprintf+0x154>
 636:	28 01       	movw	r4, r16
 638:	f2 e0       	ldi	r31, 0x02	; 2
 63a:	4f 0e       	add	r4, r31
 63c:	51 1c       	adc	r5, r1
 63e:	f8 01       	movw	r30, r16
 640:	a0 80       	ld	r10, Z
 642:	b1 80       	ldd	r11, Z+1	; 0x01
 644:	36 fe       	sbrs	r3, 6
 646:	03 c0       	rjmp	.+6      	; 0x64e <vfprintf+0x146>
 648:	69 2d       	mov	r22, r9
 64a:	70 e0       	ldi	r23, 0x00	; 0
 64c:	02 c0       	rjmp	.+4      	; 0x652 <vfprintf+0x14a>
 64e:	6f ef       	ldi	r22, 0xFF	; 255
 650:	7f ef       	ldi	r23, 0xFF	; 255
 652:	c5 01       	movw	r24, r10
 654:	0e 94 70 04 	call	0x8e0	; 0x8e0 <strnlen>
 658:	4c 01       	movw	r8, r24
 65a:	82 01       	movw	r16, r4
 65c:	f3 2d       	mov	r31, r3
 65e:	ff 77       	andi	r31, 0x7F	; 127
 660:	3f 2e       	mov	r3, r31
 662:	16 c0       	rjmp	.+44     	; 0x690 <vfprintf+0x188>
 664:	28 01       	movw	r4, r16
 666:	22 e0       	ldi	r18, 0x02	; 2
 668:	42 0e       	add	r4, r18
 66a:	51 1c       	adc	r5, r1
 66c:	f8 01       	movw	r30, r16
 66e:	a0 80       	ld	r10, Z
 670:	b1 80       	ldd	r11, Z+1	; 0x01
 672:	36 fe       	sbrs	r3, 6
 674:	03 c0       	rjmp	.+6      	; 0x67c <vfprintf+0x174>
 676:	69 2d       	mov	r22, r9
 678:	70 e0       	ldi	r23, 0x00	; 0
 67a:	02 c0       	rjmp	.+4      	; 0x680 <vfprintf+0x178>
 67c:	6f ef       	ldi	r22, 0xFF	; 255
 67e:	7f ef       	ldi	r23, 0xFF	; 255
 680:	c5 01       	movw	r24, r10
 682:	0e 94 65 04 	call	0x8ca	; 0x8ca <strnlen_P>
 686:	4c 01       	movw	r8, r24
 688:	f3 2d       	mov	r31, r3
 68a:	f0 68       	ori	r31, 0x80	; 128
 68c:	3f 2e       	mov	r3, r31
 68e:	82 01       	movw	r16, r4
 690:	33 fc       	sbrc	r3, 3
 692:	1b c0       	rjmp	.+54     	; 0x6ca <vfprintf+0x1c2>
 694:	82 2d       	mov	r24, r2
 696:	90 e0       	ldi	r25, 0x00	; 0
 698:	88 16       	cp	r8, r24
 69a:	99 06       	cpc	r9, r25
 69c:	b0 f4       	brcc	.+44     	; 0x6ca <vfprintf+0x1c2>
 69e:	b6 01       	movw	r22, r12
 6a0:	80 e2       	ldi	r24, 0x20	; 32
 6a2:	90 e0       	ldi	r25, 0x00	; 0
 6a4:	0e 94 7b 04 	call	0x8f6	; 0x8f6 <fputc>
 6a8:	2a 94       	dec	r2
 6aa:	f4 cf       	rjmp	.-24     	; 0x694 <vfprintf+0x18c>
 6ac:	f5 01       	movw	r30, r10
 6ae:	37 fc       	sbrc	r3, 7
 6b0:	85 91       	lpm	r24, Z+
 6b2:	37 fe       	sbrs	r3, 7
 6b4:	81 91       	ld	r24, Z+
 6b6:	5f 01       	movw	r10, r30
 6b8:	b6 01       	movw	r22, r12
 6ba:	90 e0       	ldi	r25, 0x00	; 0
 6bc:	0e 94 7b 04 	call	0x8f6	; 0x8f6 <fputc>
 6c0:	21 10       	cpse	r2, r1
 6c2:	2a 94       	dec	r2
 6c4:	21 e0       	ldi	r18, 0x01	; 1
 6c6:	82 1a       	sub	r8, r18
 6c8:	91 08       	sbc	r9, r1
 6ca:	81 14       	cp	r8, r1
 6cc:	91 04       	cpc	r9, r1
 6ce:	71 f7       	brne	.-36     	; 0x6ac <vfprintf+0x1a4>
 6d0:	e8 c0       	rjmp	.+464    	; 0x8a2 <vfprintf+0x39a>
 6d2:	84 36       	cpi	r24, 0x64	; 100
 6d4:	11 f0       	breq	.+4      	; 0x6da <vfprintf+0x1d2>
 6d6:	89 36       	cpi	r24, 0x69	; 105
 6d8:	41 f5       	brne	.+80     	; 0x72a <vfprintf+0x222>
 6da:	f8 01       	movw	r30, r16
 6dc:	37 fe       	sbrs	r3, 7
 6de:	07 c0       	rjmp	.+14     	; 0x6ee <vfprintf+0x1e6>
 6e0:	60 81       	ld	r22, Z
 6e2:	71 81       	ldd	r23, Z+1	; 0x01
 6e4:	82 81       	ldd	r24, Z+2	; 0x02
 6e6:	93 81       	ldd	r25, Z+3	; 0x03
 6e8:	0c 5f       	subi	r16, 0xFC	; 252
 6ea:	1f 4f       	sbci	r17, 0xFF	; 255
 6ec:	08 c0       	rjmp	.+16     	; 0x6fe <vfprintf+0x1f6>
 6ee:	60 81       	ld	r22, Z
 6f0:	71 81       	ldd	r23, Z+1	; 0x01
 6f2:	07 2e       	mov	r0, r23
 6f4:	00 0c       	add	r0, r0
 6f6:	88 0b       	sbc	r24, r24
 6f8:	99 0b       	sbc	r25, r25
 6fa:	0e 5f       	subi	r16, 0xFE	; 254
 6fc:	1f 4f       	sbci	r17, 0xFF	; 255
 6fe:	f3 2d       	mov	r31, r3
 700:	ff 76       	andi	r31, 0x6F	; 111
 702:	3f 2e       	mov	r3, r31
 704:	97 ff       	sbrs	r25, 7
 706:	09 c0       	rjmp	.+18     	; 0x71a <vfprintf+0x212>
 708:	90 95       	com	r25
 70a:	80 95       	com	r24
 70c:	70 95       	com	r23
 70e:	61 95       	neg	r22
 710:	7f 4f       	sbci	r23, 0xFF	; 255
 712:	8f 4f       	sbci	r24, 0xFF	; 255
 714:	9f 4f       	sbci	r25, 0xFF	; 255
 716:	f0 68       	ori	r31, 0x80	; 128
 718:	3f 2e       	mov	r3, r31
 71a:	2a e0       	ldi	r18, 0x0A	; 10
 71c:	30 e0       	ldi	r19, 0x00	; 0
 71e:	a3 01       	movw	r20, r6
 720:	0e 94 b7 04 	call	0x96e	; 0x96e <__ultoa_invert>
 724:	88 2e       	mov	r8, r24
 726:	86 18       	sub	r8, r6
 728:	45 c0       	rjmp	.+138    	; 0x7b4 <vfprintf+0x2ac>
 72a:	85 37       	cpi	r24, 0x75	; 117
 72c:	31 f4       	brne	.+12     	; 0x73a <vfprintf+0x232>
 72e:	23 2d       	mov	r18, r3
 730:	2f 7e       	andi	r18, 0xEF	; 239
 732:	b2 2e       	mov	r11, r18
 734:	2a e0       	ldi	r18, 0x0A	; 10
 736:	30 e0       	ldi	r19, 0x00	; 0
 738:	25 c0       	rjmp	.+74     	; 0x784 <vfprintf+0x27c>
 73a:	93 2d       	mov	r25, r3
 73c:	99 7f       	andi	r25, 0xF9	; 249
 73e:	b9 2e       	mov	r11, r25
 740:	8f 36       	cpi	r24, 0x6F	; 111
 742:	c1 f0       	breq	.+48     	; 0x774 <vfprintf+0x26c>
 744:	18 f4       	brcc	.+6      	; 0x74c <vfprintf+0x244>
 746:	88 35       	cpi	r24, 0x58	; 88
 748:	79 f0       	breq	.+30     	; 0x768 <vfprintf+0x260>
 74a:	b5 c0       	rjmp	.+362    	; 0x8b6 <vfprintf+0x3ae>
 74c:	80 37       	cpi	r24, 0x70	; 112
 74e:	19 f0       	breq	.+6      	; 0x756 <vfprintf+0x24e>
 750:	88 37       	cpi	r24, 0x78	; 120
 752:	21 f0       	breq	.+8      	; 0x75c <vfprintf+0x254>
 754:	b0 c0       	rjmp	.+352    	; 0x8b6 <vfprintf+0x3ae>
 756:	e9 2f       	mov	r30, r25
 758:	e0 61       	ori	r30, 0x10	; 16
 75a:	be 2e       	mov	r11, r30
 75c:	b4 fe       	sbrs	r11, 4
 75e:	0d c0       	rjmp	.+26     	; 0x77a <vfprintf+0x272>
 760:	fb 2d       	mov	r31, r11
 762:	f4 60       	ori	r31, 0x04	; 4
 764:	bf 2e       	mov	r11, r31
 766:	09 c0       	rjmp	.+18     	; 0x77a <vfprintf+0x272>
 768:	34 fe       	sbrs	r3, 4
 76a:	0a c0       	rjmp	.+20     	; 0x780 <vfprintf+0x278>
 76c:	29 2f       	mov	r18, r25
 76e:	26 60       	ori	r18, 0x06	; 6
 770:	b2 2e       	mov	r11, r18
 772:	06 c0       	rjmp	.+12     	; 0x780 <vfprintf+0x278>
 774:	28 e0       	ldi	r18, 0x08	; 8
 776:	30 e0       	ldi	r19, 0x00	; 0
 778:	05 c0       	rjmp	.+10     	; 0x784 <vfprintf+0x27c>
 77a:	20 e1       	ldi	r18, 0x10	; 16
 77c:	30 e0       	ldi	r19, 0x00	; 0
 77e:	02 c0       	rjmp	.+4      	; 0x784 <vfprintf+0x27c>
 780:	20 e1       	ldi	r18, 0x10	; 16
 782:	32 e0       	ldi	r19, 0x02	; 2
 784:	f8 01       	movw	r30, r16
 786:	b7 fe       	sbrs	r11, 7
 788:	07 c0       	rjmp	.+14     	; 0x798 <vfprintf+0x290>
 78a:	60 81       	ld	r22, Z
 78c:	71 81       	ldd	r23, Z+1	; 0x01
 78e:	82 81       	ldd	r24, Z+2	; 0x02
 790:	93 81       	ldd	r25, Z+3	; 0x03
 792:	0c 5f       	subi	r16, 0xFC	; 252
 794:	1f 4f       	sbci	r17, 0xFF	; 255
 796:	06 c0       	rjmp	.+12     	; 0x7a4 <vfprintf+0x29c>
 798:	60 81       	ld	r22, Z
 79a:	71 81       	ldd	r23, Z+1	; 0x01
 79c:	80 e0       	ldi	r24, 0x00	; 0
 79e:	90 e0       	ldi	r25, 0x00	; 0
 7a0:	0e 5f       	subi	r16, 0xFE	; 254
 7a2:	1f 4f       	sbci	r17, 0xFF	; 255
 7a4:	a3 01       	movw	r20, r6
 7a6:	0e 94 b7 04 	call	0x96e	; 0x96e <__ultoa_invert>
 7aa:	88 2e       	mov	r8, r24
 7ac:	86 18       	sub	r8, r6
 7ae:	fb 2d       	mov	r31, r11
 7b0:	ff 77       	andi	r31, 0x7F	; 127
 7b2:	3f 2e       	mov	r3, r31
 7b4:	36 fe       	sbrs	r3, 6
 7b6:	0d c0       	rjmp	.+26     	; 0x7d2 <vfprintf+0x2ca>
 7b8:	23 2d       	mov	r18, r3
 7ba:	2e 7f       	andi	r18, 0xFE	; 254
 7bc:	a2 2e       	mov	r10, r18
 7be:	89 14       	cp	r8, r9
 7c0:	58 f4       	brcc	.+22     	; 0x7d8 <vfprintf+0x2d0>
 7c2:	34 fe       	sbrs	r3, 4
 7c4:	0b c0       	rjmp	.+22     	; 0x7dc <vfprintf+0x2d4>
 7c6:	32 fc       	sbrc	r3, 2
 7c8:	09 c0       	rjmp	.+18     	; 0x7dc <vfprintf+0x2d4>
 7ca:	83 2d       	mov	r24, r3
 7cc:	8e 7e       	andi	r24, 0xEE	; 238
 7ce:	a8 2e       	mov	r10, r24
 7d0:	05 c0       	rjmp	.+10     	; 0x7dc <vfprintf+0x2d4>
 7d2:	b8 2c       	mov	r11, r8
 7d4:	a3 2c       	mov	r10, r3
 7d6:	03 c0       	rjmp	.+6      	; 0x7de <vfprintf+0x2d6>
 7d8:	b8 2c       	mov	r11, r8
 7da:	01 c0       	rjmp	.+2      	; 0x7de <vfprintf+0x2d6>
 7dc:	b9 2c       	mov	r11, r9
 7de:	a4 fe       	sbrs	r10, 4
 7e0:	0f c0       	rjmp	.+30     	; 0x800 <vfprintf+0x2f8>
 7e2:	fe 01       	movw	r30, r28
 7e4:	e8 0d       	add	r30, r8
 7e6:	f1 1d       	adc	r31, r1
 7e8:	80 81       	ld	r24, Z
 7ea:	80 33       	cpi	r24, 0x30	; 48
 7ec:	21 f4       	brne	.+8      	; 0x7f6 <vfprintf+0x2ee>
 7ee:	9a 2d       	mov	r25, r10
 7f0:	99 7e       	andi	r25, 0xE9	; 233
 7f2:	a9 2e       	mov	r10, r25
 7f4:	09 c0       	rjmp	.+18     	; 0x808 <vfprintf+0x300>
 7f6:	a2 fe       	sbrs	r10, 2
 7f8:	06 c0       	rjmp	.+12     	; 0x806 <vfprintf+0x2fe>
 7fa:	b3 94       	inc	r11
 7fc:	b3 94       	inc	r11
 7fe:	04 c0       	rjmp	.+8      	; 0x808 <vfprintf+0x300>
 800:	8a 2d       	mov	r24, r10
 802:	86 78       	andi	r24, 0x86	; 134
 804:	09 f0       	breq	.+2      	; 0x808 <vfprintf+0x300>
 806:	b3 94       	inc	r11
 808:	a3 fc       	sbrc	r10, 3
 80a:	11 c0       	rjmp	.+34     	; 0x82e <vfprintf+0x326>
 80c:	a0 fe       	sbrs	r10, 0
 80e:	06 c0       	rjmp	.+12     	; 0x81c <vfprintf+0x314>
 810:	b2 14       	cp	r11, r2
 812:	88 f4       	brcc	.+34     	; 0x836 <vfprintf+0x32e>
 814:	28 0c       	add	r2, r8
 816:	92 2c       	mov	r9, r2
 818:	9b 18       	sub	r9, r11
 81a:	0e c0       	rjmp	.+28     	; 0x838 <vfprintf+0x330>
 81c:	b2 14       	cp	r11, r2
 81e:	60 f4       	brcc	.+24     	; 0x838 <vfprintf+0x330>
 820:	b6 01       	movw	r22, r12
 822:	80 e2       	ldi	r24, 0x20	; 32
 824:	90 e0       	ldi	r25, 0x00	; 0
 826:	0e 94 7b 04 	call	0x8f6	; 0x8f6 <fputc>
 82a:	b3 94       	inc	r11
 82c:	f7 cf       	rjmp	.-18     	; 0x81c <vfprintf+0x314>
 82e:	b2 14       	cp	r11, r2
 830:	18 f4       	brcc	.+6      	; 0x838 <vfprintf+0x330>
 832:	2b 18       	sub	r2, r11
 834:	02 c0       	rjmp	.+4      	; 0x83a <vfprintf+0x332>
 836:	98 2c       	mov	r9, r8
 838:	21 2c       	mov	r2, r1
 83a:	a4 fe       	sbrs	r10, 4
 83c:	10 c0       	rjmp	.+32     	; 0x85e <vfprintf+0x356>
 83e:	b6 01       	movw	r22, r12
 840:	80 e3       	ldi	r24, 0x30	; 48
 842:	90 e0       	ldi	r25, 0x00	; 0
 844:	0e 94 7b 04 	call	0x8f6	; 0x8f6 <fputc>
 848:	a2 fe       	sbrs	r10, 2
 84a:	17 c0       	rjmp	.+46     	; 0x87a <vfprintf+0x372>
 84c:	a1 fc       	sbrc	r10, 1
 84e:	03 c0       	rjmp	.+6      	; 0x856 <vfprintf+0x34e>
 850:	88 e7       	ldi	r24, 0x78	; 120
 852:	90 e0       	ldi	r25, 0x00	; 0
 854:	02 c0       	rjmp	.+4      	; 0x85a <vfprintf+0x352>
 856:	88 e5       	ldi	r24, 0x58	; 88
 858:	90 e0       	ldi	r25, 0x00	; 0
 85a:	b6 01       	movw	r22, r12
 85c:	0c c0       	rjmp	.+24     	; 0x876 <vfprintf+0x36e>
 85e:	8a 2d       	mov	r24, r10
 860:	86 78       	andi	r24, 0x86	; 134
 862:	59 f0       	breq	.+22     	; 0x87a <vfprintf+0x372>
 864:	a1 fe       	sbrs	r10, 1
 866:	02 c0       	rjmp	.+4      	; 0x86c <vfprintf+0x364>
 868:	8b e2       	ldi	r24, 0x2B	; 43
 86a:	01 c0       	rjmp	.+2      	; 0x86e <vfprintf+0x366>
 86c:	80 e2       	ldi	r24, 0x20	; 32
 86e:	a7 fc       	sbrc	r10, 7
 870:	8d e2       	ldi	r24, 0x2D	; 45
 872:	b6 01       	movw	r22, r12
 874:	90 e0       	ldi	r25, 0x00	; 0
 876:	0e 94 7b 04 	call	0x8f6	; 0x8f6 <fputc>
 87a:	89 14       	cp	r8, r9
 87c:	38 f4       	brcc	.+14     	; 0x88c <vfprintf+0x384>
 87e:	b6 01       	movw	r22, r12
 880:	80 e3       	ldi	r24, 0x30	; 48
 882:	90 e0       	ldi	r25, 0x00	; 0
 884:	0e 94 7b 04 	call	0x8f6	; 0x8f6 <fputc>
 888:	9a 94       	dec	r9
 88a:	f7 cf       	rjmp	.-18     	; 0x87a <vfprintf+0x372>
 88c:	8a 94       	dec	r8
 88e:	f3 01       	movw	r30, r6
 890:	e8 0d       	add	r30, r8
 892:	f1 1d       	adc	r31, r1
 894:	80 81       	ld	r24, Z
 896:	b6 01       	movw	r22, r12
 898:	90 e0       	ldi	r25, 0x00	; 0
 89a:	0e 94 7b 04 	call	0x8f6	; 0x8f6 <fputc>
 89e:	81 10       	cpse	r8, r1
 8a0:	f5 cf       	rjmp	.-22     	; 0x88c <vfprintf+0x384>
 8a2:	22 20       	and	r2, r2
 8a4:	09 f4       	brne	.+2      	; 0x8a8 <vfprintf+0x3a0>
 8a6:	42 ce       	rjmp	.-892    	; 0x52c <vfprintf+0x24>
 8a8:	b6 01       	movw	r22, r12
 8aa:	80 e2       	ldi	r24, 0x20	; 32
 8ac:	90 e0       	ldi	r25, 0x00	; 0
 8ae:	0e 94 7b 04 	call	0x8f6	; 0x8f6 <fputc>
 8b2:	2a 94       	dec	r2
 8b4:	f6 cf       	rjmp	.-20     	; 0x8a2 <vfprintf+0x39a>
 8b6:	f6 01       	movw	r30, r12
 8b8:	86 81       	ldd	r24, Z+6	; 0x06
 8ba:	97 81       	ldd	r25, Z+7	; 0x07
 8bc:	02 c0       	rjmp	.+4      	; 0x8c2 <vfprintf+0x3ba>
 8be:	8f ef       	ldi	r24, 0xFF	; 255
 8c0:	9f ef       	ldi	r25, 0xFF	; 255
 8c2:	2b 96       	adiw	r28, 0x0b	; 11
 8c4:	e2 e1       	ldi	r30, 0x12	; 18
 8c6:	0c 94 31 05 	jmp	0xa62	; 0xa62 <__epilogue_restores__>

000008ca <strnlen_P>:
 8ca:	fc 01       	movw	r30, r24
 8cc:	05 90       	lpm	r0, Z+
 8ce:	61 50       	subi	r22, 0x01	; 1
 8d0:	70 40       	sbci	r23, 0x00	; 0
 8d2:	01 10       	cpse	r0, r1
 8d4:	d8 f7       	brcc	.-10     	; 0x8cc <strnlen_P+0x2>
 8d6:	80 95       	com	r24
 8d8:	90 95       	com	r25
 8da:	8e 0f       	add	r24, r30
 8dc:	9f 1f       	adc	r25, r31
 8de:	08 95       	ret

000008e0 <strnlen>:
 8e0:	fc 01       	movw	r30, r24
 8e2:	61 50       	subi	r22, 0x01	; 1
 8e4:	70 40       	sbci	r23, 0x00	; 0
 8e6:	01 90       	ld	r0, Z+
 8e8:	01 10       	cpse	r0, r1
 8ea:	d8 f7       	brcc	.-10     	; 0x8e2 <strnlen+0x2>
 8ec:	80 95       	com	r24
 8ee:	90 95       	com	r25
 8f0:	8e 0f       	add	r24, r30
 8f2:	9f 1f       	adc	r25, r31
 8f4:	08 95       	ret

000008f6 <fputc>:
 8f6:	0f 93       	push	r16
 8f8:	1f 93       	push	r17
 8fa:	cf 93       	push	r28
 8fc:	df 93       	push	r29
 8fe:	fb 01       	movw	r30, r22
 900:	23 81       	ldd	r18, Z+3	; 0x03
 902:	21 fd       	sbrc	r18, 1
 904:	03 c0       	rjmp	.+6      	; 0x90c <__stack+0xd>
 906:	8f ef       	ldi	r24, 0xFF	; 255
 908:	9f ef       	ldi	r25, 0xFF	; 255
 90a:	2c c0       	rjmp	.+88     	; 0x964 <__stack+0x65>
 90c:	22 ff       	sbrs	r18, 2
 90e:	16 c0       	rjmp	.+44     	; 0x93c <__stack+0x3d>
 910:	46 81       	ldd	r20, Z+6	; 0x06
 912:	57 81       	ldd	r21, Z+7	; 0x07
 914:	24 81       	ldd	r18, Z+4	; 0x04
 916:	35 81       	ldd	r19, Z+5	; 0x05
 918:	42 17       	cp	r20, r18
 91a:	53 07       	cpc	r21, r19
 91c:	44 f4       	brge	.+16     	; 0x92e <__stack+0x2f>
 91e:	a0 81       	ld	r26, Z
 920:	b1 81       	ldd	r27, Z+1	; 0x01
 922:	9d 01       	movw	r18, r26
 924:	2f 5f       	subi	r18, 0xFF	; 255
 926:	3f 4f       	sbci	r19, 0xFF	; 255
 928:	31 83       	std	Z+1, r19	; 0x01
 92a:	20 83       	st	Z, r18
 92c:	8c 93       	st	X, r24
 92e:	26 81       	ldd	r18, Z+6	; 0x06
 930:	37 81       	ldd	r19, Z+7	; 0x07
 932:	2f 5f       	subi	r18, 0xFF	; 255
 934:	3f 4f       	sbci	r19, 0xFF	; 255
 936:	37 83       	std	Z+7, r19	; 0x07
 938:	26 83       	std	Z+6, r18	; 0x06
 93a:	14 c0       	rjmp	.+40     	; 0x964 <__stack+0x65>
 93c:	8b 01       	movw	r16, r22
 93e:	ec 01       	movw	r28, r24
 940:	fb 01       	movw	r30, r22
 942:	00 84       	ldd	r0, Z+8	; 0x08
 944:	f1 85       	ldd	r31, Z+9	; 0x09
 946:	e0 2d       	mov	r30, r0
 948:	09 95       	icall
 94a:	89 2b       	or	r24, r25
 94c:	e1 f6       	brne	.-72     	; 0x906 <__stack+0x7>
 94e:	d8 01       	movw	r26, r16
 950:	16 96       	adiw	r26, 0x06	; 6
 952:	8d 91       	ld	r24, X+
 954:	9c 91       	ld	r25, X
 956:	17 97       	sbiw	r26, 0x07	; 7
 958:	01 96       	adiw	r24, 0x01	; 1
 95a:	17 96       	adiw	r26, 0x07	; 7
 95c:	9c 93       	st	X, r25
 95e:	8e 93       	st	-X, r24
 960:	16 97       	sbiw	r26, 0x06	; 6
 962:	ce 01       	movw	r24, r28
 964:	df 91       	pop	r29
 966:	cf 91       	pop	r28
 968:	1f 91       	pop	r17
 96a:	0f 91       	pop	r16
 96c:	08 95       	ret

0000096e <__ultoa_invert>:
 96e:	fa 01       	movw	r30, r20
 970:	aa 27       	eor	r26, r26
 972:	28 30       	cpi	r18, 0x08	; 8
 974:	51 f1       	breq	.+84     	; 0x9ca <__ultoa_invert+0x5c>
 976:	20 31       	cpi	r18, 0x10	; 16
 978:	81 f1       	breq	.+96     	; 0x9da <__ultoa_invert+0x6c>
 97a:	e8 94       	clt
 97c:	6f 93       	push	r22
 97e:	6e 7f       	andi	r22, 0xFE	; 254
 980:	6e 5f       	subi	r22, 0xFE	; 254
 982:	7f 4f       	sbci	r23, 0xFF	; 255
 984:	8f 4f       	sbci	r24, 0xFF	; 255
 986:	9f 4f       	sbci	r25, 0xFF	; 255
 988:	af 4f       	sbci	r26, 0xFF	; 255
 98a:	b1 e0       	ldi	r27, 0x01	; 1
 98c:	3e d0       	rcall	.+124    	; 0xa0a <__ultoa_invert+0x9c>
 98e:	b4 e0       	ldi	r27, 0x04	; 4
 990:	3c d0       	rcall	.+120    	; 0xa0a <__ultoa_invert+0x9c>
 992:	67 0f       	add	r22, r23
 994:	78 1f       	adc	r23, r24
 996:	89 1f       	adc	r24, r25
 998:	9a 1f       	adc	r25, r26
 99a:	a1 1d       	adc	r26, r1
 99c:	68 0f       	add	r22, r24
 99e:	79 1f       	adc	r23, r25
 9a0:	8a 1f       	adc	r24, r26
 9a2:	91 1d       	adc	r25, r1
 9a4:	a1 1d       	adc	r26, r1
 9a6:	6a 0f       	add	r22, r26
 9a8:	71 1d       	adc	r23, r1
 9aa:	81 1d       	adc	r24, r1
 9ac:	91 1d       	adc	r25, r1
 9ae:	a1 1d       	adc	r26, r1
 9b0:	20 d0       	rcall	.+64     	; 0x9f2 <__ultoa_invert+0x84>
 9b2:	09 f4       	brne	.+2      	; 0x9b6 <__ultoa_invert+0x48>
 9b4:	68 94       	set
 9b6:	3f 91       	pop	r19
 9b8:	2a e0       	ldi	r18, 0x0A	; 10
 9ba:	26 9f       	mul	r18, r22
 9bc:	11 24       	eor	r1, r1
 9be:	30 19       	sub	r19, r0
 9c0:	30 5d       	subi	r19, 0xD0	; 208
 9c2:	31 93       	st	Z+, r19
 9c4:	de f6       	brtc	.-74     	; 0x97c <__ultoa_invert+0xe>
 9c6:	cf 01       	movw	r24, r30
 9c8:	08 95       	ret
 9ca:	46 2f       	mov	r20, r22
 9cc:	47 70       	andi	r20, 0x07	; 7
 9ce:	40 5d       	subi	r20, 0xD0	; 208
 9d0:	41 93       	st	Z+, r20
 9d2:	b3 e0       	ldi	r27, 0x03	; 3
 9d4:	0f d0       	rcall	.+30     	; 0x9f4 <__ultoa_invert+0x86>
 9d6:	c9 f7       	brne	.-14     	; 0x9ca <__ultoa_invert+0x5c>
 9d8:	f6 cf       	rjmp	.-20     	; 0x9c6 <__ultoa_invert+0x58>
 9da:	46 2f       	mov	r20, r22
 9dc:	4f 70       	andi	r20, 0x0F	; 15
 9de:	40 5d       	subi	r20, 0xD0	; 208
 9e0:	4a 33       	cpi	r20, 0x3A	; 58
 9e2:	18 f0       	brcs	.+6      	; 0x9ea <__ultoa_invert+0x7c>
 9e4:	49 5d       	subi	r20, 0xD9	; 217
 9e6:	31 fd       	sbrc	r19, 1
 9e8:	40 52       	subi	r20, 0x20	; 32
 9ea:	41 93       	st	Z+, r20
 9ec:	02 d0       	rcall	.+4      	; 0x9f2 <__ultoa_invert+0x84>
 9ee:	a9 f7       	brne	.-22     	; 0x9da <__ultoa_invert+0x6c>
 9f0:	ea cf       	rjmp	.-44     	; 0x9c6 <__ultoa_invert+0x58>
 9f2:	b4 e0       	ldi	r27, 0x04	; 4
 9f4:	a6 95       	lsr	r26
 9f6:	97 95       	ror	r25
 9f8:	87 95       	ror	r24
 9fa:	77 95       	ror	r23
 9fc:	67 95       	ror	r22
 9fe:	ba 95       	dec	r27
 a00:	c9 f7       	brne	.-14     	; 0x9f4 <__ultoa_invert+0x86>
 a02:	00 97       	sbiw	r24, 0x00	; 0
 a04:	61 05       	cpc	r22, r1
 a06:	71 05       	cpc	r23, r1
 a08:	08 95       	ret
 a0a:	9b 01       	movw	r18, r22
 a0c:	ac 01       	movw	r20, r24
 a0e:	0a 2e       	mov	r0, r26
 a10:	06 94       	lsr	r0
 a12:	57 95       	ror	r21
 a14:	47 95       	ror	r20
 a16:	37 95       	ror	r19
 a18:	27 95       	ror	r18
 a1a:	ba 95       	dec	r27
 a1c:	c9 f7       	brne	.-14     	; 0xa10 <__ultoa_invert+0xa2>
 a1e:	62 0f       	add	r22, r18
 a20:	73 1f       	adc	r23, r19
 a22:	84 1f       	adc	r24, r20
 a24:	95 1f       	adc	r25, r21
 a26:	a0 1d       	adc	r26, r0
 a28:	08 95       	ret

00000a2a <__prologue_saves__>:
 a2a:	2f 92       	push	r2
 a2c:	3f 92       	push	r3
 a2e:	4f 92       	push	r4
 a30:	5f 92       	push	r5
 a32:	6f 92       	push	r6
 a34:	7f 92       	push	r7
 a36:	8f 92       	push	r8
 a38:	9f 92       	push	r9
 a3a:	af 92       	push	r10
 a3c:	bf 92       	push	r11
 a3e:	cf 92       	push	r12
 a40:	df 92       	push	r13
 a42:	ef 92       	push	r14
 a44:	ff 92       	push	r15
 a46:	0f 93       	push	r16
 a48:	1f 93       	push	r17
 a4a:	cf 93       	push	r28
 a4c:	df 93       	push	r29
 a4e:	cd b7       	in	r28, 0x3d	; 61
 a50:	de b7       	in	r29, 0x3e	; 62
 a52:	ca 1b       	sub	r28, r26
 a54:	db 0b       	sbc	r29, r27
 a56:	0f b6       	in	r0, 0x3f	; 63
 a58:	f8 94       	cli
 a5a:	de bf       	out	0x3e, r29	; 62
 a5c:	0f be       	out	0x3f, r0	; 63
 a5e:	cd bf       	out	0x3d, r28	; 61
 a60:	09 94       	ijmp

00000a62 <__epilogue_restores__>:
 a62:	2a 88       	ldd	r2, Y+18	; 0x12
 a64:	39 88       	ldd	r3, Y+17	; 0x11
 a66:	48 88       	ldd	r4, Y+16	; 0x10
 a68:	5f 84       	ldd	r5, Y+15	; 0x0f
 a6a:	6e 84       	ldd	r6, Y+14	; 0x0e
 a6c:	7d 84       	ldd	r7, Y+13	; 0x0d
 a6e:	8c 84       	ldd	r8, Y+12	; 0x0c
 a70:	9b 84       	ldd	r9, Y+11	; 0x0b
 a72:	aa 84       	ldd	r10, Y+10	; 0x0a
 a74:	b9 84       	ldd	r11, Y+9	; 0x09
 a76:	c8 84       	ldd	r12, Y+8	; 0x08
 a78:	df 80       	ldd	r13, Y+7	; 0x07
 a7a:	ee 80       	ldd	r14, Y+6	; 0x06
 a7c:	fd 80       	ldd	r15, Y+5	; 0x05
 a7e:	0c 81       	ldd	r16, Y+4	; 0x04
 a80:	1b 81       	ldd	r17, Y+3	; 0x03
 a82:	aa 81       	ldd	r26, Y+2	; 0x02
 a84:	b9 81       	ldd	r27, Y+1	; 0x01
 a86:	ce 0f       	add	r28, r30
 a88:	d1 1d       	adc	r29, r1
 a8a:	0f b6       	in	r0, 0x3f	; 63
 a8c:	f8 94       	cli
 a8e:	de bf       	out	0x3e, r29	; 62
 a90:	0f be       	out	0x3f, r0	; 63
 a92:	cd bf       	out	0x3d, r28	; 61
 a94:	ed 01       	movw	r28, r26
 a96:	08 95       	ret

00000a98 <_exit>:
 a98:	f8 94       	cli

00000a9a <__stop_program>:
 a9a:	ff cf       	rjmp	.-2      	; 0xa9a <__stop_program>
